---
http_interactions:
- request:
    method: get
    uri: https://www.rfc-editor.org/rfcrss.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.rfc-editor.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Sep 2024 20:20:17 GMT
      Content-Type:
      - text/xml
      Content-Length:
      - '12043'
      Connection:
      - keep-alive
      Last-Modified:
      - Sat, 14 Sep 2024 00:59:37 GMT
      Etag:
      - '"2f0b-62209da9643d8-gzip"'
      Accept-Ranges:
      - bytes
      Vary:
      - Accept-Encoding
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 8c5c46868f9a16f9-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<rss version=\"2.0\">\n\t<channel>\n\t\t<title>Recent
        RFCs</title>\n\t\t<link>https://www.rfc-editor.org/</link>\n\t\t<description>Recently
        published RFCs</description>\n\t\t<language>en-us</language>\n\t\t<lastBuildDate>Fri,
        13 Sep 2024 17:59:37 -0700</lastBuildDate>\r\n\t\t\t<item>\n\t\t<title>RFC
        9594: Key Provisioning for Group Communication Using Authentication and Authorization
        for Constrained Environments (ACE)</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9594</link>\n\t\t<description>This
        document defines how to use the Authentication and Authorization\r\nfor Constrained
        Environments (ACE) framework to distribute keying\r\nmaterial and configuration
        parameters for secure group communication.\r\nCandidate group members that
        act as Clients and are authorized to\r\njoin a group can do so by interacting
        with a Key Distribution Center\r\n(KDC) acting as the Resource Server, from
        which they obtain the\r\nkeying material to communicate with other group members.
        While\r\ndefining general message formats as well as the interface and\r\noperations
        available at the KDC, this document supports different\r\napproaches and protocols
        for secure group communication. Therefore,\r\ndetails are delegated to separate
        application profiles of this\r\ndocument as specialized instances that target
        a particular group\r\ncommunication approach and define how communications
        in the group are\r\nprotected. Compliance requirements for such application
        profiles are\r\nalso specified.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9616: Delay-Based Metric Extension for the Babel Routing Protocol</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9616</link>\n\t\t<description>This
        document defines an extension to the Babel routing protocol that\r\nmeasures
        the round-trip time (RTT) between routers and makes it\r\npossible to prefer
        lower-latency links over higher-latency ones.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9620: Guidelines for Human Rights Protocol and Architecture Considerations</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9620</link>\n\t\t<description>This
        document sets guidelines for human rights considerations for\r\ndevelopers
        working on network protocols and architectures, similar to\r\nthe work done
        on the guidelines for privacy considerations (RFC\r\n6973). This is an updated
        version of the guidelines for human rights\r\nconsiderations in RFC 8280.\r\n\r\nThis
        document is a product of the Human Right Protocol Considerations\r\n(HRPC)
        Research Group in the IRTF.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9569: The Application-Layer Traffic Optimization (ALTO) Transport Information
        Publication Service (TIPS)</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9569</link>\n\t\t<description>&quot;Application-Layer
        Traffic Optimization (ALTO) Protocol&quot; (RFC 7285)\r\nleverages HTTP/1.1
        and is designed for the simple, sequential\r\nrequest-reply use case, in which
        an ALTO client requests a sequence\r\nof information resources and the server
        responds with the complete\r\ncontent of each resource, one at a time.\r\n\r\nRFC
        8895, which describes ALTO incremental updates using Server-Sent\r\nEvents
        (SSE), defines a multiplexing protocol on top of HTTP/1.x, so\r\nthat an ALTO
        server can incrementally push resource updates to\r\nclients whenever monitored
        network information resources change,\r\nallowing the clients to monitor multiple
        resources at the same time.\r\nHowever, HTTP/2 and later versions already
        support concurrent,\r\nnon-blocking transport of multiple streams in the same
        HTTP\r\nconnection.\r\n\r\nTo take advantage of newer HTTP features, this
        document introduces\r\nthe ALTO Transport Information Publication Service
        (TIPS). TIPS uses\r\nan incremental RESTful design to give an ALTO client
        the new\r\ncapability to explicitly and concurrently (in a non-blocking manner)\r\nrequest
        (or pull) specific incremental updates using HTTP/2 or\r\nHTTP/3, while still
        functioning for HTTP/1.1.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9624: EVPN Broadcast, Unknown Unicast, or Multicast (BUM) Using Bit Index
        Explicit Replication (BIER)</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9624</link>\n\t\t<description>This
        document specifies protocols and procedures for forwarding\r\nBroadcast, Unknown
        Unicast, or Multicast (BUM) traffic of Ethernet\r\nVPNs (EVPNs) using Bit
        Index Explicit Replication (BIER).</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9625: EVPN Optimized Inter-Subnet Multicast (OISM) Forwarding</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9625</link>\n\t\t<description>Ethernet
        VPN (EVPN) provides a service that allows a single Local\r\nArea Network (LAN),
        comprising a single IP subnet, to be divided into\r\nmultiple segments.  Each
        segment may be located at a different site,\r\nand the segments are interconnected
        by an IP or MPLS backbone. \r\nIntra-subnet traffic (either unicast or multicast)
        always appears to\r\nthe end users to be bridged, even when it is actually
        carried over\r\nthe IP or MPLS backbone.  When a single tenant owns multiple
        such\r\nLANs, EVPN also allows IP unicast traffic to be routed between those\r\nLANs.
        \ This document specifies new procedures that allow inter-subnet\r\nIP multicast
        traffic to be routed among the LANs of a given tenant\r\nwhile still making
        intra-subnet IP multicast traffic appear to be\r\nbridged.  These procedures
        can provide optimal routing of the\r\ninter-subnet multicast traffic and do
        not require any such traffic to\r\negress a given router and then ingress
        that same router.  These\r\nprocedures also accommodate IP multicast traffic
        that originates or\r\nis destined to be external to the EVPN domain.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9600: TRansparent Interconnection of Lots of Links (TRILL): Explicit Congestion
        Notification (ECN) Support</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9600</link>\n\t\t<description>Explicit
        Congestion Notification (ECN) allows a forwarding element to\r\nnotify downstream
        devices, including the destination, of the onset of\r\ncongestion without
        having to drop packets. This can improve network\r\nefficiency through better
        congestion control without packet drops.\r\nThis document extends ECN to TRansparent
        Interconnection of Lots of\r\nLinks (TRILL) switches, including integration
        with IP ECN, and\r\nprovides for ECN marking in the TRILL header extension
        flags word\r\n(RFC 7179).</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9601: Propagating Explicit Congestion Notification across IP Tunnel Headers
        Separated by a Shim</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9601</link>\n\t\t<description>RFC
        6040 on &quot;Tunnelling of Explicit Congestion Notification&quot; made the\r\nrules
        for propagation of Explicit Congestion Notification (ECN)\r\nconsistent for
        all forms of IP-in-IP tunnel. This specification\r\nupdates RFC 6040 to clarify
        that its scope includes tunnels where two\r\nIP headers are separated by at
        least one shim header that is not\r\nsufficient on its own for wide-area packet
        forwarding. It surveys\r\nwidely deployed IP tunnelling protocols that use
        such shim headers\r\nand updates the specifications of those that do not mention
        ECN\r\npropagation (including RFCs 2661, 3931, 2784, 4380 and 7450, which\r\nspecify
        L2TPv2, L2TPv3, Generic Routing Encapsulation (GRE), Teredo,\r\nand Automatic
        Multicast Tunneling (AMT), respectively). This\r\nspecification also updates
        RFC 6040 with configuration requirements\r\nneeded to make any legacy tunnel
        ingress safe.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC 9599:
        Guidelines for Adding Congestion Notification to Protocols that Encapsulate
        IP</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9599</link>\n\t\t<description>The
        purpose of this document is to guide the design of congestion\r\nnotification
        in any lower-layer or tunnelling protocol that\r\nencapsulates IP. The aim
        is for explicit congestion signals to\r\npropagate consistently from lower-layer
        protocols into IP. Then, the\r\nIP internetwork layer can act as a portability
        layer to carry\r\ncongestion notification from non-IP-aware congested nodes
        up to the\r\ntransport layer (L4). Specifications that follow these guidelines,\r\nwhether
        produced by the IETF or other standards bodies,  should\r\nassure interworking
        among IP-layer and lower-layer congestion\r\nnotification mechanisms. This
        document is included in BCP 89 and\r\nupdates the single paragraph of advice
        to subnetwork designers about\r\nExplicit Congestion Notification (ECN) in
        Section 13 of RFC 3819 by\r\nreplacing it with a reference to this document.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9618: Updates to X.509 Policy Validation</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9618</link>\n\t\t<description>This
        document updates RFC 5280 to replace the algorithm for X.509\r\npolicy validation
        with an equivalent, more efficient algorithm. The\r\noriginal algorithm built
        a structure that scaled exponentially in the\r\nworst case, leaving implementations
        vulnerable to denial-of-service\r\nattacks.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9588: Kerberos Simple Password-Authenticated Key Exchange (SPAKE) Pre-authentication</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9588</link>\n\t\t<description>This
        document defines a new pre-authentication mechanism for the\r\nKerberos protocol.
        \ The mechanism uses a password-authenticated key\r\nexchange (PAKE) to prevent
        brute-force password attacks, and it may\r\nincorporate a second factor.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9617: A YANG Data Model for In Situ Operations, Administration, and Maintenance
        (IOAM)</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9617</link>\n\t\t<description>In
        situ Operations, Administration, and Maintenance (IOAM) is an\r\nexample of
        an on-path hybrid measurement method. IOAM defines a\r\nmethod for producing
        operational and telemetry information that may\r\nbe exported using the in-band
        or out-of-band method. RFCs 9197 and\r\n9326 discuss the data fields and associated
        data types for IOAM. This\r\ndocument defines a YANG module for the configuration
        of IOAM\r\nfunctions.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9605: Secure Frame (SFrame): Lightweight Authenticated Encryption for Real-Time
        Media</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9605</link>\n\t\t<description>This
        document describes the Secure Frame (SFrame) end-to-end\r\nencryption and
        authentication mechanism for media frames in a\r\nmultiparty conference call,
        in which central media servers (Selective\r\nForwarding Units or SFUs) can
        access the media metadata needed to\r\nmake forwarding decisions without having
        access to the actual media.\r\n\r\nThis mechanism differs from the Secure
        Real-Time Protocol (SRTP) in\r\nthat it is independent of RTP (thus compatible
        with non-RTP media\r\ntransport) and can be applied to whole media frames
        in order to be\r\nmore bandwidth efficient.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9630: Multicast On-Path Telemetry Using In Situ Operations, Administration,
        and Maintenance (IOAM)</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9630</link>\n\t\t<description>This
        document specifies two solutions to meet the requirements of\r\non-path telemetry
        for multicast traffic using IOAM.  While IOAM is\r\nadvantageous for multicast
        traffic telemetry, some unique challenges\r\nare present.  This document provides
        the solutions based on the IOAM\r\ntrace option and direct export option to
        support the telemetry data\r\ncorrelation and the multicast tree reconstruction
        without incurring\r\ndata redundancy.</description>\n\t</item>\r\n\t\t\t<item>\n\t\t<title>RFC
        9637: Expanding the IPv6 Documentation Space</title>\n\t\t<link>https://www.rfc-editor.org/info/rfc9637</link>\n\t\t<description>The
        document describes the reservation of an additional IPv6 address\r\nprefix
        for use in documentation. This update to RFC 3849 expands on\r\nthe existing
        2001:db8::/32 address block with the reservation of an\r\nadditional, larger
        prefix.  The addition of a /20 prefix allows\r\ndocumented examples to more
        closely reflect a broader range of\r\nrealistic, current deployment scenarios
        and more closely aligns with\r\ncontemporary allocation models for large networks.</description>\n\t</item>\r\n\t\t</channel>\n</rss>"
  recorded_at: Thu, 19 Sep 2024 20:20:17 GMT
- request:
    method: get
    uri: https://www.rfc-editor.org/rfc/rfc9605.txt
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.rfc-editor.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Sep 2024 20:20:17 GMT
      Content-Type:
      - text/plain; charset=utf-8
      Content-Length:
      - '114181'
      Connection:
      - keep-alive
      Last-Modified:
      - Tue, 27 Aug 2024 22:43:51 GMT
      Etag:
      - '"1be05-620b1f9bdc375-gzip"'
      Vary:
      - Accept-Encoding
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Cache-Control:
      - max-age=1200
      Cf-Cache-Status:
      - MISS
      Accept-Ranges:
      - bytes
      Server:
      - cloudflare
      Cf-Ray:
      - 8c5c468839241684-SJC
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 19 Sep 2024 20:20:17 GMT
recorded_with: VCR 6.3.1
